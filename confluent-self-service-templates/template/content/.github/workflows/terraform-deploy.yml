name: "Terraform Deploy"

on:
  workflow_dispatch:
  push:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      CONFLUENT_CLOUD_API_KEY: {% raw %}${{ secrets.CONFLUENT_CLOUD_API_KEY }}{% endraw %}
      CONFLUENT_CLOUD_API_SECRET: {% raw %}${{ secrets.CONFLUENT_CLOUD_API_SECRET }}{% endraw %}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        working-directory: .
        run: terraform init

      - name: Validate Terraform
        working-directory: .
        run: terraform validate

      - name: Plan Terraform
        working-directory: .
        run: terraform plan -out=tfplan

      - name: Apply Terraform
        working-directory: .
        run: terraform apply -auto-approve tfplan

                
      - name: Extract Terraform Outputs
        id: terraform_output
        working-directory: .
        run: |
          ENVIRONMENT_ID=$(terraform output -raw environment_id)
          ENVIRONMENT_NAME=$(terraform output -raw environment_name)
          
          # Create env_output.json file
          echo "{\"environment_id\": \"$ENVIRONMENT_ID\", \"environment_name\": \"$ENVIRONMENT_NAME\"}" > docs/env_output.json
        
      - name: Update Environment Details
        run: |
          # Process the markdown files using the output JSON
          pip install jinja2
          python - << EOF
          import json
          from jinja2 import Template
          import os
          
          # Load environment outputs
          with open('docs/env_output.json', 'r') as f:
              env_data = json.load(f)
              
          # Update the environment-details.md file
          with open('docs/environment-details.md', 'r') as f:
              template_content = f.read()
              
          template = Template(template_content)
          rendered = template.render(env_output=env_data)
          
          with open('docs/environment-details.md', 'w') as f:
              f.write(rendered)
          EOF
          
      - name: Commit and Push Updated Docs
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add docs/
          git commit -m "Update environment documentation with Terraform outputs" || echo "No changes to commit"
          git push
